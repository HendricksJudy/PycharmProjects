# 定义

set1 = {123, 1, 2, 3, 'abc', 'love', True, False, 0, ('a', 'f', 1, 2, 3), 3.1415, 123}
set2 = {4, 6, 7, 8, 9}
'''
无序
False 在集合中表示为 0， 所有的False和0只能存在一个 True 和 1 同理
{False, 1, 2, 3, 'love', 3.1415, 'abc', 123, ('a', 'f', 1, 2, 3)}
'''

# 检测集合中的值
'''
检测存在
x in set1 
检测不存在
x not in set
'''

# 获取集合元素的个数 len()
# 向列表中追加 set.add()
# 删除集合中的元素 set.pop(随机删除一个)
# 指定删除  set.remove(element) 返回None， 若不存在则引发KeyEorror
# discard 指定删除集合中的元素，不存在也不会报错
# clear()
# 向集合中添加集合 set3 = set1.update({4, 6, 7, 8, 9}}
# 复制 dict.cpoy()
'''
当前集合中的浅拷贝并不存在 深拷贝的问题
    因为集合中元素不可变，包括元组和冰冻集合
    不存在拷贝后，对集合中的二级容器操作的问题
'''

'''
语法：定义冰冻集合，只能使用 forzenset() 函数进行冰冻集合的定义
冰冻集合一旦定义无法修改
冰冻集合只能做集合相关的运算： 求交集，差集
frozenset() 本身就是一个强制转换类型的函数，可以把其他任何容器类型的数据转换为冰冻集合
'''
